[{"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\index.js":"1","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\reportWebVitals.js":"2","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\filters.js":"3","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\search.js":"4","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\sheets.js":"5","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\upload.js":"6","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\download.js":"7","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\home.js":"8","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\table.js":"9","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\addRecord.js":"10"},{"size":489,"mtime":1607083456816,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606170422435,"results":"13","hashOfConfig":"12"},{"size":207,"mtime":1607075233945,"results":"14","hashOfConfig":"12"},{"size":259,"mtime":1607083137052,"results":"15","hashOfConfig":"12"},{"size":1034,"mtime":1607592825063,"results":"16","hashOfConfig":"12"},{"size":2131,"mtime":1607610514908,"results":"17","hashOfConfig":"12"},{"size":211,"mtime":1607006651910,"results":"18","hashOfConfig":"12"},{"size":3006,"mtime":1607602702629,"results":"19","hashOfConfig":"12"},{"size":3250,"mtime":1607610066545,"results":"20","hashOfConfig":"12"},{"size":1569,"mtime":1607610384270,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lwrrec",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\index.js",[],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\reportWebVitals.js",[],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\filters.js",[],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\search.js",[],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\sheets.js",["44","45"],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\upload.js",[],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\download.js",[],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\home.js",["46","47","48","49"],"import { React, useState } from 'react';\r\nimport Modal from \"react-modal\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; //css\r\nimport \"../styles/home.css\";//css\r\n//other \r\nimport Table from './table'\r\n//modals\r\nimport FilterComponent from './filters';\r\nimport SearchComponent from './search';\r\nimport SheetsComponent from './sheets';\r\nimport { uploadAlert } from './upload';\r\nimport { addRecord } from './addRecord'\r\n//TEST\r\n\r\n// addRecord(Columns)\r\n\r\nconst APP = () => {\r\n    //modals hooks\r\n    const [Columns, setColumns] = useState([])\r\n    const [SearchModalStatus, ChangeSearchModalStatus] = useState(false);       //status for search\r\n    const [FilterModalStatus, ChangeFilterModalStatus] = useState(false);       //status for filter\r\n    //closing modals\r\n    //------------------------------DATA HOOKS------------------------------\r\n    const [Sheet, setSheet] = useState('TG')\r\n\r\n    Modal.setAppElement('body');\r\n\r\n    return (\r\n        <div >\r\n            <div className='navigatorSide   bg-dark d-flex flex-row  align-baseline justify-content-between'>\r\n                <SheetsComponent sheetValue={Sheet} sheet={setSheet} />\r\n                <div className=\"m-2\">\r\n                    <i title=\"Search\" onClick={() => ChangeSearchModalStatus(true)} className=\"fa fa-search\"></i>\r\n                    <i title=\"Filters\" onClick={() => ChangeFilterModalStatus(true)} className=\"fa fa-filter\"></i>\r\n                    <i title=\"Add Record\" onClick={() => { addRecord({ Columns }) }} className=\"fa fa-plus\"></i>\r\n                    <i title=\"Upload Sheet \" onClick={() => uploadAlert()} className=\"fa fa-upload\"></i>\r\n                    <i title=\"Download sheet\" onClick={() => uploadAlert()} className=\"fa fa-download\"></i>\r\n                    {/* <i title=\"Download sheet\" onClick={() => sweet_alert()} className=\"fa fa-download\"></i> */}\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"tableContainer\">\r\n                <Table className=\"table\"\r\n                    sheetToImport={Sheet} columnNames={setColumns} />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* modals */}\r\n\r\n            {/* <SettingsComponent visibleStatus={ExportModalStatus} visibility={ChangeExportModalStatus} /> */}\r\n            {/* \r\n            <button onClick={() => ChangeSettingsModalStatus(false)}>   </button>\r\n            <Modal isOpen={SearchModalStatus}>\r\n                <SearchComponent />\r\n                <button onClick={() => ChangeSearchModalStatus(false)}>  OFF  </button>\r\n            </Modal>\r\n            <Modal isOpen={FilterModalStatus}>\r\n                <FilterComponent />\r\n                <button onClick={() => ChangeFilterModalStatus(false)}>  OFF  </button>\r\n            </Modal> */}\r\n\r\n            {/* <Modal isOpen={ExportModalStatus}>\r\n                <DownloadComponent />\r\n                <button onClick={() => ChangeExportModalStatus(false)}>  OFF  </button>\r\n            </Modal> */}\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default APP;","G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\table.js",["50"],"G:\\Aplikacje\\Praktyki\\projekt\\front\\src\\components\\addRecord.js",["51","52"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import React, { Input } from 'react'\r\nimport SweetAlert from 'sweetalert2';\r\nimport axios from 'axios'\r\n\r\nexport const addRecord = async ({ Columns }) => {\r\n    let htmlContent = ''\r\n    for (let i = 0; i < Columns.length; i++) {\r\n        if (Columns[i] !== 'id')\r\n            htmlContent += '<label for=\"' + Columns[i] + '\">' + Columns[i] + '</label></br >' + '<Input class=\"newRowInput\" type=\"text\" id=\"' + i + '\" name=\"' + Columns[i] + '\" /></br>'\r\n    }\r\n\r\n    await SweetAlert.fire({\r\n        title: \"Add record\",\r\n        html: htmlContent,\r\n        customClass: \"formRecord\",\r\n        preConfirm: () => {\r\n            try {\r\n                Columns = Columns.pop()\r\n                let object = {}\r\n                let valueToCollect = document.querySelectorAll('.newRowInput')\r\n                for (let i = 0; i < valueToCollect.length; i++) {\r\n                    object[valueToCollect[i].name] = valueToCollect[i].value\r\n                }\r\n                // axios({\r\n                //     method: \"POST\",\r\n                //     url: \"http://localhost:5000/newLine\",\r\n                //     data: {\r\n                //         ...object\r\n                //     }\r\n                // })\r\n            }\r\n            catch (err) {\r\n                return SweetAlert.fire({\r\n                    title: \"Oops\",\r\n                    text: \"unexpected error occurred while reading your data \\n Please try one more time\",\r\n                    icon: 'error',\r\n                })\r\n            }\r\n        }\r\n    })\r\n}",{"ruleId":"53","severity":1,"message":"54","line":8,"column":12,"nodeType":"55","messageId":"56","endLine":8,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":8,"column":27,"nodeType":"55","messageId":"56","endLine":8,"endColumn":43},{"ruleId":"53","severity":1,"message":"58","line":10,"column":8,"nodeType":"55","messageId":"56","endLine":10,"endColumn":23},{"ruleId":"53","severity":1,"message":"59","line":11,"column":8,"nodeType":"55","messageId":"56","endLine":11,"endColumn":23},{"ruleId":"53","severity":1,"message":"60","line":22,"column":12,"nodeType":"55","messageId":"56","endLine":22,"endColumn":29},{"ruleId":"53","severity":1,"message":"61","line":23,"column":12,"nodeType":"55","messageId":"56","endLine":23,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":68,"column":5,"nodeType":"55","endLine":68,"endColumn":14,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":10,"column":95,"nodeType":"68","messageId":"69","endLine":10,"endColumn":96},"no-unused-vars","'SheetInSelect' is assigned a value but never used.","Identifier","unusedVar","'setSheetInSelect' is assigned a value but never used.","'FilterComponent' is defined but never used.","'SearchComponent' is defined but never used.","'SearchModalStatus' is assigned a value but never used.","'FilterModalStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSelectedSheet'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [SelectedSheet, sheetToImport, dataFetch] as a second argument to the useEffect Hook.",["70"],"'axios' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",{"desc":"71","fix":"72"},"Add dependencies array: [SelectedSheet, sheetToImport, dataFetch]",{"range":"73","text":"74"},[2162,2162],", [SelectedSheet, sheetToImport, dataFetch]"]